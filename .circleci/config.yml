version: 2

jobs:
  front:
    working_directory: ~/drfrf

    docker:
      - image: node:10

    steps:
      - checkout

      - restore_cache:
          keys:
            - front-v1-{{ .Branch }}-{{ checksum "lib/js/yarn.lock" }}
            - front-v1-{{ .Branch }}
            - front-v1-master-{{ checksum "lib/js/yarn.lock" }}
            - front-v1-master

      - run:
          name: Install dependencies
          working_directory: lib/js
          command: yarn

      - run:
          name: Check lockfile is up-to-date
          working_directory: lib/js
          command: yarn check

      - run:
          name: Run tests
          working_directory: lib/js
          command: yarn test

      - save_cache:
          key: front-v1-{{ .Branch }}-{{ checksum "lib/js/yarn.lock" }}
          paths:
            - ~/.config/yarn
            - ~/.yarn
            - ~/drfrf/lib/js/node_modules

  back:
    working_directory: ~/drfrf

    docker:
      - image: python:3.7

    environment:
      DJANGO_SETTINGS_MODULE: tests.settings

    steps:
      - checkout

      - restore_cache:
          keys:
            - back-v1-{{ .Branch }}-{{ checksum "lib/py/Pipfile.lock" }}
            - back-v1-{{ .Branch }}
            - back-v1-master-{{ checksum "lib/py/Pipfile.lock" }}
            - back-v1-master

      - run:
          name: Install system dependencies
          command: pip install pipenv

      - run:
          name: Install unreleased dependencies (TEMPORARY)
          working_directory: lib/py
          command: pipenv install --dev --skip-lock black

      - run:
          name: Check for security vulnerabilities
          working_directory: lib/py
          command: pipenv check

      - run:
          name: Check code style
          working_directory: lib/py
          command: pipenv run flake8 .

      - run:
          name: Check format
          working_directory: lib/py
          command: pipenv run black --diff --check .

      - run:
          name: Check imports order
          working_directory: lib/py
          command: pipenv run isort --check-only --recursive --diff .

      - run:
          name: Run unit tests
          working_directory: lib/py
          command: pipenv run green -r

      - save_cache:
          key: back-v1-{{ .Branch }}-{{ checksum "lib/py/Pipfile.lock" }}
          paths:
            - ~/.cache/pip

workflows:
  version: 2
  stack:
    jobs:
      - front
      - back
